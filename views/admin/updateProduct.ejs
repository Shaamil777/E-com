<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>UW.site - Admin - Product</title>
    <link rel="stylesheet" href="/styles/usermanagement.css">
</head>

<body>
    <%- include('../partials/adminSideBar') %>

    <div class="container-fluid page-body-wrapper">
        <nav class="navbar p-0 fixed-top d-flex flex-row">
            <div class="navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center">
                <a class="navbar-brand brand-logo-mini" href="index.html"><img src="assets/images/logo-mini.svg"
                        alt="logo" /></a>
            </div>
            <div class="navbar-menu-wrapper flex-grow d-flex align-items-stretch">
                <button class="navbar-toggler navbar-toggler align-self-center" type="button"
                    data-toggle="minimize">
                    <span class="mdi mdi-menu"></span>
                </button>
                <ul class="navbar-nav navbar-nav-right">
                    <li class="nav-item dropdown border-left">
                        <a class="nav-link count-indicator dropdown-toggle" id="messageDropdown" href="#"
                            data-toggle="dropdown" aria-expanded="false">
                            <i class="mdi mdi-email"></i><span class="count bg-success"></span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right navbar-dropdown preview-list"
                            aria-labelledby="messageDropdown">
                            <h6 class="p-3 mb-0">Messages</h6>
                            <div class="dropdown-divider"></div>
                            <p class="p-3 mb-0 text-center">4 new messages</p>
                        </div>
                    </li>
                </ul>
            </div>
        </nav>

        <div class="row p-3 w-100 h-100">
            <div class="col-12 grid-margin">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Update Category</h4>
                        <form id="form" enctype="multipart/form-data">
                            <div class="form-group">
                                <input type="hidden"  value="<%= product._id  %>" name="" id="productId">
                                <label for="categoryName">Product Name</label>
                                <input type="text" class="form-control" id="categoryName" name="productName" value="<%= product.name %>" required>
                            </div>

                            <div style="display: flex; justify-content: center; flex-wrap: wrap; gap: 10px;">
                                <% product.image.forEach((imageSrc, index) => { %>
                                  <div 
                                    style="
                                      position: relative;
                                      width: 80px; 
                                      height: 80px; 
                                      border-radius: 50%; 
                                      overflow: hidden;
                                      display: flex;
                                      align-items: center;
                                      justify-content: center;"
                                    class="image-container">
                                    <label for="productUpdateImage<%= index %>">
                                      <img 
                                        src="/<%= imageSrc %>" 
                                        alt="" 
                                        style="
                                          width: 100%; 
                                          height: 100%; 
                                          border-radius: 50%; 
                                          object-fit: cover; 
                                          border: 2px solid #ddd;"
                                        class="image<%= index %>" />
                                      <div 
                                        style="
                                          position: absolute; 
                                          top: 0; 
                                          left: 0; 
                                          width: 100%; 
                                          height: 100%; 
                                          border-radius: 50%; 
                                          background-color: rgba(0, 0, 0, 0.4); 
                                          display: flex; 
                                          align-items: center; 
                                          justify-content: center; 
                                          opacity: 0; 
                                          transition: opacity 0.3s ease; 
                                          backdrop-filter: blur(3px);"
                                        class="overlay">
                                        <span 
                                          style="
                                            font-size: 20px; 
                                            color: white; 
                                            font-weight: bold; 
                                            cursor: pointer;"
                                          class="add-icon">+</span>
                                      </div>
                                    </label>
                                  </div>
                                <% }) %>
                              </div>
                              
                              <% for (let i = 0; i < 4; i++) { %>
                                <input
                                  type="file"
                                  id="productUpdateImage<%= i %>"
                                  style="display: none;"
                                  accept="image/*"
                                  onchange="previewAndCrop(event, <%= i %>)"
                                />
                                <div 
                                  id="cropPreviewUpdateSection<%= i %>" 
                                  style="display: none; text-align: center; margin-top: 10px;">
                                  <img id="cropPreviewUpdate<%= i %>" style="max-width: 100%; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;" />
                                  <button 
                                    type="button" 
                                    style="
                                      padding: 5px 10px; 
                                      background-color: #007BFF; 
                                      color: white; 
                                      border: none; 
                                      border-radius: 4px; 
                                      cursor: pointer;"
                                    onclick="startCroppingUpdate(<%= i %>)">Crop Image</button>
                                </div>
                              <% } %>
                              

                            <div class="form-group">
                                <label for="categoryDescription">Description</label>
                                <input type="text" class="form-control" id="categoryDescription" name="productDescription" value="<%= product.description %>" required>
                            </div>

                            <div class="form-group">
                                <label for="category">Category</label>
                                <select id="category" name="productCategory" class="form-control" required>
                                    <option value="">Select Category</option>
                                    <% categories.forEach(function(productCategory) { %>
                                        <option value="<%= productCategory.name %>" <%= product.category === productCategory.name ? 'selected' : '' %>><%= productCategory.name %></option>
                                    <% }) %>
                                </select>
                            </div>

                            <div class="form-group">
                                <label for="categoryBrand">Brand</label>
                                <input type="text" class="form-control" id="categoryBrand" name="productBrand" value="<%= product.brand %>" required>
                            </div>

                            <div class="form-group">
                                <label for="categoryPrice">Price</label>
                                <input type="text" class="form-control" id="categoryPrice" name="productPrice" value="<%= product.price %>" required>
                            </div>

                            <div class="form-group">
                                <label for="categoryStock">Stock</label>
                                <input type="text" class="form-control" id="categoryStock" name="productStock" value="<%= product.stock %>" required>
                            </div>

                            <div class="form-group">
                                <label for="categoryWarrenty">Warranty</label>
                                <input type="text" class="form-control" id="categoryWarrenty" name="productWarrenty" value="<%= product.warrenty %>" required>
                            </div>

                            <div class="form-group">
                                <label for="categoryReturn">Return Policy</label>
                                <input type="text" class="form-control" id="categoryReturn" name="productReturn" value="<%= product.returnPolicy %>" required>
                            </div>

                            <div class="d-flex justify-content-center">
                                <button type="submit" class="btn btn-primary mt-2 w-50">Update Product</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/cropperjs@1.5.12/dist/cropper.min.js"></script>

    <script>
        document.getElementById('form').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent default form submission
    
            // Collect form data
            const form = document.getElementById('form');
            const productName = document.getElementById('categoryName').value;
            const productDescription = document.getElementById('categoryDescription').value;
            const productCategory = document.getElementById('category').value;
            const productBrand = document.getElementById('categoryBrand').value;
            const productPrice = document.getElementById('categoryPrice').value;
            const productStock = document.getElementById('categoryStock').value;
            const productWarrenty = document.getElementById('categoryWarrenty').value;
            const productReturn = document.getElementById('categoryReturn').value;
            
            

    
            // Prepare data as a JSON object
            const data = {
                productId:'<%= product.id %>',
                productName: productName,
                productDescription: productDescription,
                productCategory: productCategory,
                productBrand: productBrand,
                productPrice: productPrice,
                productStock: productStock,
                productWarrenty: productWarrenty,
                productReturn: productReturn,
            };
    console.log(data)
            // Create a new FormData object for the images
           

            // Append the rest of the data to formData
           

    
            try {
                const response = await fetch('/admin/product/update', {
                    method: 'PUT',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data) // Send the FormData object which includes both text and files
                });
    
                const result = await response.json();
                if (result.success) {
                    swal.fire({
                        title: 'Success',
                        text: 'Product updated successfully',
                        icon: 'success',

                    }).then(()=>{
                        window.location.href = '/admin/productmanagement';
                    })
                } else {
                    swal.fire({
                        title: 'Error',
                        text: 'Failed to update product',
                        icon: 'error',
                        confirmButtonText: 'Okay'
                    })
                }
            } catch (error) {
                console.error('Failed to update product', error);
                alert('Failed to update product');
            }
        });





        const cropperInstances = [];
const croppedImages = [];
let croppedImage = null;
let currentImageIndex = null;

function previewAndCrop(event, index) {
  const file = event.target.files[0];
  if (!file) return;

  console.log(event);
  console.log(index);
  const cropPreview = document.getElementById(`cropPreviewUpdate${index}`);
  const cropPreviewSection = document.getElementById(
    `cropPreviewUpdateSection${index}`
  );

  cropPreview.src = URL.createObjectURL(file);
  cropPreviewSection.style.display = "block";
  if (cropperInstances[index]) {
    cropperInstances[index].destroy();
  }
  cropperInstances[index] = new Cropper(cropPreview, {
    aspectRatio: 0,
    viewMode: 1,
    autoCropArea: 1,
    scalable: true,
    zoomable: true,
    movable: true,
  });

  currentImageIndex = index;
}

console.log(croppedImages);

function startCroppingUpdate(index) {
  const cropper = cropperInstances[index];
  if (!cropper) return;
  console.log(index);
  cropper.getCroppedCanvas().toBlob((blob) => {
    croppedImages[index] = blob;
    croppedImage = blob;
    const cropPreviewSection = document.getElementById(
      `cropPreviewUpdateSection${index}`
    );
    cropPreviewSection.style.display = "none";
    console.log("Cropped image stored for upload or further use.");
    changeImage(index);
  });
}

const productId = document.querySelector("#productId").value;

console.log(productId);

async function changeImage(index) {
  try {
    const formData = new FormData();
    formData.append("productImage", croppedImage);
    formData.append("productIndex", index);
    const response = await fetch(`/admin/update-product-image/${productId}`, {
      method: "POST",
      body: formData,
    });
    const data = await response.json();
    if (data.val) {
      window.location.href = `/admin/product/update/${productId}`;
    }
  } catch (err) {
    console.log(err);
  }
}


    </script>
    
</body>

</html>
